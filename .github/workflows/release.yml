name: release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    name: Create Release
    strategy:
      matrix:
        os: [ubuntu-latest]
        golang-version: [1.18, 1.19]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup golang v${{ matrix.golang-version }}
        uses: actions/setup-go@v2
        with:
          go-version: "^${{ matrix.golang-version }}"

      # Install external go modules before cloning
      - run: go install github.com/laher/goxc@latest

      # Checkout code
      - uses: actions/checkout@v2

      # Install golang deps, using a cache
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ matrix.os }}-${{ matrix.golang-version }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.golang-version }}-go-
      
      # build binaries for all supported environments
      - run: sudo apt update && sudo apt install -y make
      - run: make build-all

      # Create the binary checksums
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
      - uses: tristan-weil/ghaction-checksum-sign-artifact@v1
        id: checksums
        with:
          path: 'build/${{ steps.get_version.outputs.VERSION }}/*'
          checksum_digests: sha256,sha512
          checksum_format: gnu
          checksum_output: one_file_per_digest

      # Create the release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            build/${{ steps.get_version.outputs.VERSION }}/*
            ${{ steps.checksums.outputs.generated-files }}
